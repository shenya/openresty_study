
#user  nobody;
worker_processes  1;
daemon off;
master_process off;

error_log  logs/error.log error;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

        upstream backend {
        	drizzle_server localhost:3306 dbname=test password=xxx user=root protocol=mysql;
                drizzle_keepalive max=100 mode=single overflow=reject;
    	}


    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
           #access_by_lua '
            #   if ngx.var.remote_addr=="47.93.228.87" then
             #      return
             #  end
              #     ngx.exit(403)
              #';

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /echo_test {
            
        echo nginx;
        echo_location /sub;
        echo world;

        }


        location /sub {

            echo hello;

        }

        location /test_arg {
            set_unescape_uri $name $arg_name;
            echo "name: $name";
            echo "query_string:$query_string";
        }

        location /list {
           proxy_pass http://hq.sinajs.cn;
           proxy_set_header Accept-Encoding "";
        }

        location /query {
            extern_request;
            myfilter on;
        }

        location /test_uri {
           #set $foo hello;
           #echo "foo: $foo";
           #echo "This is $dollar";
           #echo "uri=$uri";
           #echo "req_uri=$request_uri";
           #echo "name_a: $arg_name_a";
           #echo "value_b: $arg_value_b";

           content_by_lua '
               if ngx.var.arg_name == nil then
                   ngx.say("name: missing")
               else
                   ngx.say("name:[", ngx.var.arg_name, "]")
               end
           ';
        }

        location /nestle{
            client_body_in_single_buffer on;
            hello_world shengy;
            test_flag on;
            #myfilter on;
        }

        location /mysql_test{
            client_body_in_single_buffer on;
            sub_request_mysql test;
        }


        location /mysql {
           set_unescape_uri $valid_query_string $query_string;
           drizzle_query $valid_query_string;
           drizzle_pass backend;
           drizzle_connect_timeout    500ms; # default 60s
           drizzle_send_query_timeout 2s;    # default 60s
           drizzle_recv_cols_timeout  1s;    # default 60s
           drizzle_recv_rows_timeout  1s;    # default 60s
           rds_json on;

           # content_by_lua '
           # 	ngx.log(ngx.ERR, "args: ", args,ngx.var.document_uri);
           #     ngx.header.content_type = "text/plain";
           #     ngx.say("request uri:",ngx.var.request_uri);
           #     ngx.say("name:",ngx.var.arg_name);
           #     ngx.say("args:",ngx.var.args);
           #     ngx.say("query_string:", ngx.var.query_string);
           # ';
           #set_unescape_uri $name $arg_name;
           #set $my_sql 'select * from student where name="$name"';
        }

        location /mysql-status {

           drizzle_status;

        }

        location /mysql_query {
            set_unescape_uri $name $arg_name;
            set $args 'select * from student where name="$name";';
            proxy_pass http://localhost/mysql;

            #content_by_lua '
            #    ngx.header.content_type = "text/plain";
            #    ngx.say("hello",ngx.var.arg_name);
            #';

            #content_by_lua '
            #    ngx.header.content_type = "text/plain";
             #   ngx.say("hello",ngx.var.request_uri,ngx.var.arg_name,ngx.var.args);
            #';
        }

        location /mysql_add {
            set_unescape_uri $name $arg_name;
            set_unescape_uri $age $arg_age;
            set $args 'insert into student(name,age) values("$name", "$age")';
            proxy_pass http://localhost/mysql;

            #content_by_lua '
            #    ngx.header.content_type = "text/plain";
            #    ngx.say("hello",ngx.var.arg_name);
            #';

            #content_by_lua '
            #    ngx.header.content_type = "text/plain";
             #   ngx.say("hello",ngx.var.request_uri,ngx.var.arg_name,ngx.var.args);
            #';
        }

        location /mysql_update {
            set_unescape_uri $name $arg_name;
            set_unescape_uri $age $arg_age;
            set $args 'update student set age="$age" where name="$name"';
            proxy_pass http://localhost/mysql;
        }

        location /mysql_delete {
            set_unescape_uri $name $arg_name;
            set $args 'delete from student where name="$name"';
            proxy_pass http://localhost/mysql;
        }

        location /hello {
           #deny all;
           #deny 47.93.228.87;
           #deny 172.17.244.156;
           #deny 127.0.0.1;
           access_by_lua '
               if ngx.var.remote_addr=="47.93.228.87" then
                   return
               end
                   ngx.exit(403)
              ';
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}


        
    }

        geo $dollar {
           default "$";
        }
    server {
        listen       8080;

        location / {
            default_type text/html;
            content_by_lua '
                ngx.say("<p>hello, world</p>");
            ';
        }

        location /test {
           #set $foo hello;
           #echo "foo: $foo";
           #echo "This is $dollar";
           #echo "uri=$uri";
           #echo "req_uri=$request_uri";
           echo "name_a: $arg_name_a";
           echo "value_b: $arg_value_b";
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
